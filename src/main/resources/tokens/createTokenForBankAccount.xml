<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="createTokenForBankAccount" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="country" description="The country the bank account is in"/>
    <parameter name="currency" description="The currency the bank account is in"/>
    <parameter name="routingNumber" description="The routing number for the bank account"/>
    <parameter name="accountNumber" description="The account number for the bank account"/>
    <parameter name="accountHolderName" description="The name of the person or business that owns the bank account"/>
    <parameter name="accountHolderType" description="The type of entity that holds the account"/>
    <parameter name="customer" description="The customer to create a token for"/>
    <sequence>
        <property name="uri.var.country" expression="$func:country"/>
        <property name="uri.var.routingNumber" expression="$func:routingNumber"/>
        <property name="uri.var.accountNumber" expression="$func:accountNumber"/>
        <property name="uri.var.currency" expression="$func:currency"/>
        <property name="uri.var.accountHolderName" expression="$func:accountHolderName"/>
        <property name="uri.var.accountHolderType" expression="$func:accountHolderType"/>
        <property name="uri.var.customer" expression="$func:customer"/>
        <payloadFactory media-type="json">
            <format>
                {
                }
            </format>
        </payloadFactory>
        <script language="js"><![CDATA[
         var country=mc.getProperty('uri.var.country');
         var routingNumber=mc.getProperty('uri.var.routingNumber');
         var accountNumber=mc.getProperty('uri.var.accountNumber');
         var currency=mc.getProperty('uri.var.currency');
         var accountHolderName=mc.getProperty('uri.var.accountHolderName');
         var accountHolderType=mc.getProperty('uri.var.accountHolderType');
         var customer=mc.getProperty('uri.var.customer');

         //Get the existing payload
         var payload = mc.getPayloadJSON();

         if (country != null && country != "") {
            payload["bank_account[country]"]=country;
         }

         if (routingNumber != null && routingNumber != "") {
            payload["bank_account[routing_number]"]=routingNumber;
         }

         if (accountNumber != null && accountNumber != "") {
            payload["bank_account[account_number]"]=accountNumber;
         }

         if (currency != null && currency != "") {
            payload["bank_account[currency]"]=currency;
         }

         if (accountHolderName != null && accountHolderName != "") {
            payload["bank_account[account_holder_name]"]=accountHolderName;
         }

         if (accountHolderType != null && accountHolderType != "") {
            payload["bank_account[account_holder_type]"]=accountHolderType;
         }

         if (customer != null && customer != "") {
            payload["customer"]=customer;
         }
         //Set the newly constructed payload
            mc.setPayloadJSON(payload);
        ]]>
        </script>
        <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2"/>
        <filter source="$ctx:STRIPE_BLOCKING" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="post"
                              uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/tokens"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="post"
                              uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/tokens"/>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>