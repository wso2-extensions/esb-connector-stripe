<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="createInvoice" xmlns="http://ws.apache.org/ns/synapse">
    <!-- Required parameters -->
    <parameter name="customerId" description="The identifier of the customer to whom the invoice is created."/>
    <parameter name="applicationFee"
               description="A fee that will be applied to the invoice and transferred to the application owner’s Stripe account."/>
    <parameter name="description" description="Description about the invoice"/>
    <parameter name="statementDescriptor"
               description="Extra information about a charge for the customer’s credit card statement."/>
    <parameter name="metadata" description="A set of key/value pairs that you can attach to a refund object. "/>
    <parameter name="subscription" description="The ID of the subscription to invoice. "/>
    <parameter name="taxPercent" description="The percent tax rate applied to the invoice. "/>

    <sequence>
    <property name="uri.var.customerId" expression="$func:customerId"/>
    <property name="uri.var.applicationFee" expression="$func:applicationFee"/>
    <property name="uri.var.description" expression="$func:description"/>
    <property name="uri.var.statementDescriptor" expression="$func:statementDescriptor"/>
    <property name="uri.var.metadata" expression="$func:metadata"/>
    <property name="uri.var.subscription" expression="$func:subscription"/>
    <property name="uri.var.taxPercent" expression="$func:taxPercent"/>
        <payloadFactory media-type="json">
            <format>
                {
                }
            </format>
        </payloadFactory>
        <script language="js">
            <![CDATA[
        var applicationFee=mc.getProperty('uri.var.applicationFee');
         var description=mc.getProperty('uri.var.description');
         var statementDescriptor=mc.getProperty('uri.var.statementDescriptor');
         var subscription=mc.getProperty('uri.var.subscription');
         var metadata=mc.getProperty('uri.var.metadata');
         var taxPercent=mc.getProperty('uri.var.taxPercent');
         //Get the existing payload
         var payload = mc.getPayloadJSON();
         if (applicationFee != null && applicationFee != "") {
             payload["application_fee"]=applicationFee;
         }
         if (description != null && description != "") {
             payload["description"]=description;
         }
         if (statementDescriptor != null && statementDescriptor != "") {
             payload["statement_descriptor"]=statementDescriptor;
         }
         if (taxPercent != null && taxPercent != "") {
             payload["tax_percent"]=taxPercent;
         }
         if (subscription != null && subscription != "") {
             payload["subscription"]=subscription;
         }
         if (metadata != null && metadata != "") {
            var txt = '{"metadataList":'+metadata+'}';
            var query="";
            var obj = eval ("(" + txt + ")");
            for(var key in obj.metadataList){
               payload["metadata["+key+"]"]=obj.metadataList[key];
            }
         }
         //Set the newly constructed payload
         mc.setPayloadJSON(payload);
        ]]>
        </script>

        <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2"/>
        <property name="FORCE_POST_PUT_NOBODY" value="true" scope="axis2" type="BOOLEAN"/>
        <filter source="$ctx:STRIPE_BLOCKING" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="post"
                              uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/invoices?customer={uri.var.customerId}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="post"
                              uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/invoices?customer={uri.var.customerId}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>


